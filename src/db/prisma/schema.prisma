// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  role     Role
  doctor   Doctor?
  patient  Patient?
}

model Doctor {
  id             Int           @id @default(autoincrement())
  userId         Int           @unique
  specialization String
  appointments   Appointment[]
  user           User          @relation(fields: [userId], references: [id])
}

model Patient {
  id             Int           @id @default(autoincrement())
  userId         Int           @unique
  age            Int
  medicalHistory String?
  appointments   Appointment[]
  user           User          @relation(fields: [userId], references: [id])
}

model Appointment {
  id        Int      @id @default(autoincrement())
  doctorId  Int
  patientId Int
  date      DateTime
  status    Status   @default(PENDING)

  doctor  Doctor  @relation(fields: [doctorId], references: [id])
  patient Patient @relation(fields: [patientId], references: [id])
}

enum Role {
  RECEPTIONIST
  DOCTOR
  PATIENT
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}
